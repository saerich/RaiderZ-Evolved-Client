/*
* Copyright 2010 Autodesk, Inc.  All rights reserved.
* Use of this software is subject to the terms of the Autodesk license agreement provided at the time of installation or download, 
* or which otherwise accompanies this software in either electronic or hard copy form.
*/

	


/*!	\file
	\ingroup kyruntime_pathfinding */

#ifndef KY_LPFPREMERGER_GRID_CONFIG_H
#define KY_LPFPREMERGER_GRID_CONFIG_H

#include <kyruntime/lpf/ilpfmanager.h>

namespace Kaim
{

class LpfPreMerger_Grid;

/*!	The LpfPreMerger_Grid_Config class allows an \LpfContext to create an instance of the LpfPreMerger_Grid class
	and make it available to other components in the World.
	\ingroup kyruntime_pathfinding */
class LpfPreMerger_Grid_Config : public ILpfPreMergerConfig
{
public:
	/*! \label_constructor
		\param maxGridWidth				Sets the value of #m_maxGridWidth.
		\param maxPrecision				Sets the value of #m_maxPrecision.
		\param maxVertices				Sets the value of #m_maxVertices.
		\param maxContours				Sets the value of #m_maxContours. */
	LpfPreMerger_Grid_Config(KyFloat32 maxGridWidth = 10.0f,	KyFloat32 maxPrecision = 0.1f,
		KyUInt32 maxVertices = 1024, KyUInt32 maxContours = 64)
		: m_maxGridWidth(maxGridWidth), m_maxPrecision(maxPrecision), m_maxVertices(maxVertices), m_maxContours(maxContours)
	{
	}

	virtual ILpfPreMerger* CreateLpfPreMerger(ILpfManager::LpfContext& context) const;

	/*! This parameter is used to determine the number of grid points the LpfPreMerger_Grid pre-merger modifier will need, in
		conjunction with #m_maxPrecision, and consequently the amount of memory allocated for the pool of grid points. For details
		on the way the grid is allocated based on this parameter, see the LpfPreMerger_Grid class description.
		\pp Note that this parameter does not actually constrain the total area covered by the obstacle outlines actually merged
		by the LpfPreMerger_Grid pre-merger modifier at runtime. It is only used at initialization time to determine the expected
		number of grid points required. If these obstacles cover a wider area than the value of this parameter, the spacing of the
		points in the grid is increased to fit the area covered by the obstacles.
		\units			meters
		\acceptedvalues	any positive value
		\defaultvalue	\c 10.0f */
	KyFloat32 m_maxGridWidth; 

	/*! Determines the least possible distance that can be present between adjacent points in the grid constructed by the 
		LpfPreMerger_Grid pre-merger modifier, along both the X and Z axes.
		This parameter fulfills the following roles:
		-	When the LpfPreMerger_Grid pre-merger modifier is initialized, this value is used along with the value 
			#m_maxGridWidth value to determine the number of grid points required at runtime, and consequently the amount of
			memory that must be allocated for the pool of grid points. For details on the way the grid is allocated based on
			this parameter, see the LpfPreMerger_Grid class description. 
		-	It determines the lowest possible value that you can set as the preferred grid spacing by calling LpfPreMerger_Grid::SetPrecision(). 
		-	It determines the default preferred grid spacing to be used any time you do not specify a preferred grid spacing by
			calling LpfPreMerger_Grid::SetPrecision(), or when you pass a value of 0.0f to LpfPreMerger_Grid::SetPrecision(). 
		\pp \units meters
		\acceptedvalues	any positive value
		\defaultvalue	\c 0.1f */
	KyFloat32 m_maxPrecision;

	/*! Determines the maximum number of polyline nodes that the GridMerger initialized by the LpfPreMerger_Grid modifier can
		accept in all input polylines for a local map, and the maximum number of polyline nodes that can be contained in all
		merged contours returned by the GridMerger.
		\pp This value is used to size pools of polyline nodes used internally by the GridMerger. If the input pool is too small
		to accept all polyline nodes contained in the outlines of the obstacles in a NavFloor, the merging operation will fail.
		Similarly, if the output pool is too small to accept all polyline nodes in the contours generated by the GridMerger,
		the merging operation will fail.
		\acceptedvalues	any positive value
		\defaultvalue	\c 1024 */
	KyUInt32 m_maxVertices;

	/*! Determines the maximum number of obstacle contours that the GridMerger initialized by the LpfPreMerger_Grid modifier can
		accept in the set of input obstacles within any local map, and the maximum number of obstacle contours that can be created
		in the set of merged outlines returned by the GridMerger.
		\pp This value is used to size pools of obstacle contours used internally by the GridMerger. If the input pool is too small
		to accept all obstacle contours contained in the outlines of the obstacles in a local map, the merging operation will fail.
		Similarly, if the output pool is too small to accept all polylines in the obstacle contours generated by the GridMerger,
		the merging operation will fail.
		\acceptedvalues	any positive value
		\defaultvalue	\c 64 */
	KyUInt32 m_maxContours;
};


} // namespace Kaim

#endif // KY_LPFPREMERGER_GRID_CONFIG_H
